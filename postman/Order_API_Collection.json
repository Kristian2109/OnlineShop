{
	"info": {
		"_postman_id": "d27f6e7c-8142-4d7e-97bd-c68e3ba7a1df",
		"name": "Online Shop - Order API",
		"description": "Collection for testing the Order API of the Online Shop application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Operations",
			"description": "Endpoints that can be accessed by regular users",
			"item": [
				{
					"name": "Create a new order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"customerId\": 1,\n    \"items\": [\n        {\n            \"productId\": 1,\n            \"quantity\": 2\n        },\n        {\n            \"productId\": 3,\n            \"quantity\": 1\n        }\n    ],\n    \"shippingAddress\": {\n        \"streetAddress\": \"123 Main St\",\n        \"city\": \"Boston\",\n        \"state\": \"MA\",\n        \"postalCode\": \"02108\",\n        \"country\": \"USA\"\n    },\n    \"paymentMethod\": \"CREDIT_CARD\",\n    \"notes\": \"Please leave at the front door\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders"
							]
						},
						"description": "Create a new order with the specified products, shipping address, and payment method"
					},
					"response": []
				},
				{
					"name": "Get order by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"1"
							]
						},
						"description": "Retrieve a specific order by its ID"
					},
					"response": []
				},
				{
					"name": "Get orders by customer ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/customer/1?page=0&size=10&sortBy=orderDate&sortOrder=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"customer",
								"1"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "Page number (zero-based)"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Page size"
								},
								{
									"key": "sortBy",
									"value": "orderDate",
									"description": "Field to sort by"
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"description": "Sort order (asc or desc)"
								}
							]
						},
						"description": "Retrieve all orders for a specific customer with pagination and sorting"
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin Operations",
			"description": "Endpoints that can only be accessed by administrators",
			"item": [
				{
					"name": "Get all orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders?page=0&size=10&sortBy=orderDate&sortOrder=desc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "Page number (zero-based)"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Page size"
								},
								{
									"key": "sortBy",
									"value": "orderDate",
									"description": "Field to sort by"
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"description": "Sort order (asc or desc)"
								}
							]
						},
						"description": "Retrieve all orders with pagination and sorting (admin only)"
					},
					"response": []
				},
				{
					"name": "Get orders by status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/status/PENDING?page=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"status",
								"PENDING"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"description": "Page number (zero-based)"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Page size"
								}
							]
						},
						"description": "Retrieve all orders with a specific status (admin only)"
					},
					"response": []
				},
				{
					"name": "Get orders by date range",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/date-range?startDate=2023-01-01T00:00:00Z&endDate=2023-12-31T23:59:59Z&page=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"date-range"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2023-01-01T00:00:00Z",
									"description": "Start date in ISO format"
								},
								{
									"key": "endDate",
									"value": "2023-12-31T23:59:59Z",
									"description": "End date in ISO format"
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (zero-based)"
								},
								{
									"key": "size",
									"value": "10",
									"description": "Page size"
								}
							]
						},
						"description": "Retrieve all orders within a specific date range (admin only)"
					},
					"response": []
				},
				{
					"name": "Update order status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/1/status?status=CONFIRMED",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"1",
								"status"
							],
							"query": [
								{
									"key": "status",
									"value": "CONFIRMED",
									"description": "New status for the order"
								}
							]
						},
						"description": "Update the status of a specific order (admin only)"
					},
					"response": []
				},
				{
					"name": "Delete order",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/orders/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"1"
							]
						},
						"description": "Delete a specific order (admin only)"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "your_user_jwt_token",
			"type": "string"
		},
		{
			"key": "admin_token",
			"value": "your_admin_jwt_token",
			"type": "string"
		}
	]
} 